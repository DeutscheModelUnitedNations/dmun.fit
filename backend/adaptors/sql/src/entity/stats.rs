//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use data::stats::Stats;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "stats")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub event_count: i32,
    pub person_count: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl From<Model> for Stats {
    fn from(value: Model) -> Self {
        Self {
            event_count: value.event_count,
            person_count: value.person_count,
        }
    }
}
